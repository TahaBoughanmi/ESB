generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
}

model Client {
  idClient    Int       @id @default(autoincrement())
  userName    String
  creditCard  String?
  address     String?
  latitude    Float?
  longitude   Float?
  cin         Int       @unique
  phoneNum    Int       @unique
  email       String    @unique
  password    String
  picture     String?
  Orders      Order[]   @relation("ClientOrders")
  Favorites   Favorite[]
  Messages    Message[] @relation("ClientMessages")
  PendingOrders PendingOrder[] @relation("ClientPendingOrders")
  Payments     Payment[]
}

model Order {
  idorders   Int           @id @default(autoincrement())
  startDate  String?
  endDate    String?
  status     String        @default("pending")  
  clientId   Int
  Client     Client        @relation("ClientOrders", fields: [clientId], references: [idClient])
  Workers    Worker[]      @relation("OrderWorkers")
  Products   OrderProduct[]
}

model Product {
  idproducts   Int       @id @default(autoincrement())
  name         String
  category     String
  description  String
  price        Int
  picture      String
  rating       Int
  stock        Int
  numOfRatings Int
  Orders       OrderProduct[]
  Favorites    Favorite[]
  PendingOrderProducts PendingOrderProduct[]
}

model OrderProduct {
  orderId   Int
  productId Int
  Order     Order    @relation(fields: [orderId], references: [idorders])
  Product   Product  @relation(fields: [productId], references: [idproducts])

  @@id([orderId, productId])
}

model Favorite {
  clientId    Int
  productsId  Int
  Client      Client    @relation(fields: [clientId], references: [idClient])
  Product     Product   @relation(fields: [productsId], references: [idproducts])

  @@id([clientId, productsId])
}

model Worker {
  idworker     Int       @id @default(autoincrement())
  cin          Int
  creditCard   String?
  userName     String
  phoneNum     Int
  email        String?   @unique
  password     String?
  rentedProd   String?
  picture      String?
  resume       String?
  rating       Int?
  jobTitle     String?
  hourlyRate   Float?
  available    Boolean?
  address      String?
  ordersId     Int?
  latitude     Decimal?
  longitude    Decimal?
  status       Boolean?
  comments     String?
  Order        Order?    @relation("OrderWorkers", fields: [ordersId], references: [idorders])
  Messages     Message[] @relation("WorkerMessages")
  @@index([ordersId], name: "idx_ordersId")
}

model Message {
  id              Int            @id @default(autoincrement())
  content         String
  clientId        Int?
  workerId        Int?
  conversationId  Int
  sender          String
  Client          Client?        @relation("ClientMessages", fields: [clientId], references: [idClient])
  Worker          Worker?        @relation("WorkerMessages", fields: [workerId], references: [idworker])
  Conversation    Conversation   @relation(fields: [conversationId], references: [id])
  createdat       DateTime       @default(now())
  @@index([conversationId], name: "idx_conversationId")
}

model Conversation {
  id         Int       @id @default(autoincrement())
  title      String?
  clientId   Int?
  workerId   Int?
  Messages   Message[]
}

model PendingOrder {
  id          Int           @id @default(autoincrement())
  clientId    Int
  startDate   String?
  endDate     String?
  status      String        @default("pending")
  amount      Int
  Products    PendingOrderProduct[]

  Client      Client        @relation("ClientPendingOrders", fields: [clientId], references: [idClient])
  Payments    Payment[]
}

model PendingOrderProduct {
  pendingOrderId  Int
  productId       Int
  PendingOrder    PendingOrder @relation(fields: [pendingOrderId], references: [id])
  Product         Product      @relation(fields: [productId], references: [idproducts])

  @@id([pendingOrderId, productId])
}

model Payment {
  id            Int           @id @default(autoincrement())
  clientId      Int
  pendingOrderId Int
  amount        Int
  status        String        @default("pending")
  Client        Client        @relation(fields: [clientId], references: [idClient])
  PendingOrder  PendingOrder  @relation(fields: [pendingOrderId], references: [id])

  @@index([clientId], name: "idx_clientId")
  @@index([pendingOrderId], name: "idx_pendingOrderId")
}